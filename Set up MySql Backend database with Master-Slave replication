MySQL Database replication
================

On  both edge nodes:

1. yum install mysql-server

	chkconfig mysqld on
	chkconfig --list mysqld # check the switches
	mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off
	service mysqld start

2. /usr/bin/mysql_secure_installation

	[...]
	Enter current password for root (enter for none):
	OK, successfully used password, moving on...
	[...]
	Set root password? [Y/n] y
	New password:
	Re-enter new password:
	Remove anonymous users? [Y/n] Y
	[...]
	Disallow root login remotely? [Y/n] N
	[...]
	Remove test database and access to it [Y/n] Y
	[...]
	Reload privilege tables now? [Y/n] Y
	All done!

3. Install mysql jdbc connector
    	yum install mysql-connector-java


4. vim /etc/my.cnf

Copy and paste the following. Set the server_id=1 in master and 2 in all slaves. 

[client]
port    	= 3306
socket 	= /var/lib/mysql/mysql.sock
 
# The MySQL server
[mysqld]
port    	= 3306
socket	= /var/lib/mysql/mysql.sock
skip-locking
key_buffer  	= 32M
key_buffer_size = 64M
max_allowed_packet = 32M
thread_stack   	= 256K
thread_cache_size  = 64
query_cache_limit  = 16M
query_cache_size   = 64M
query_cache_type   = 1
max_connections	= 700
table_open_cache = 256
sort_buffer_size = 8M
join_buffer_size = 8M
net_buffer_length = 8K
read_buffer_size = 2M
read_rnd_buffer_size = 16M
myisam_sort_buffer_size = 64M
thread_concurrency = 8
binlog_format=row
 
log-bin=mysql-bin 	#Added for MySQL Replication
server-id	= 1     #Note: this should be 2 on the slave node
 
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit  = 1 #Changed from 2 to 1 for Replication
innodb_log_buffer_size      	= 64M
innodb_buffer_pool_size     	= 6G
innodb_thread_concurrency   	= 16
innodb_flush_method         	= O_DIRECT
innodb_log_file_size = 1024M
sync_binlog=1     	#Added for MySQL Replication
 
[mysqldump]
quick
max_allowed_packet = 16M
 
[mysql]
no-auto-rehash
 
[myisamchk]
key_buffer_size = 128M
sort_buffer_size = 128M
read_buffer = 2M
write_buffer = 2M
 
[mysqlhotcopy]
interactive-timeout
 
[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
 
 
Ensure that 'server-id' is set to '2' in /etc/my.cnf on the MySQL slave node.
 
5.     Create the log directories and files and change their permissions for the user mysql.

6. Move the MySQL ib_logfile install directory to /mysql
 
service mysqld stop
mv -f /var/lib/mysql/ib_logfile* /tmp

service mysqld start


8.a. On Master node

mysql -u root -p

On Master:
GRANT REPLICATION SLAVE ON *.* TO 'slave_user'@'%' IDENTIFIED BY 'password';
SET GLOBAL binlog_format = 'ROW';


FLUSH PRIVILEGES;

flush tables with read lock;

show master status;   // Note number and log file

unlock tables;

exit;


8.b. On Slave node:


On Slave:

CHANGE MASTER TO MASTER_HOST='cdh51-1.ent.cloudera.com',MASTER_USER='slave_user', MASTER_PASSWORD='password', MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=  number;  

// Note the log file and number should be same as what we got from `show master status` on master.



START SLAVE;

SHOW SLAVE STATUS\G ;

// Note: look for any errors on the SHOW SLAVE STATUS output.  ‘Slave_IO_State should show ‘Waiting for master to send event’ if everything went well.


SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1; SLAVE START; // If there is a problem

exit


9. On master

mysql -u root -p

	Enter password:

	create database scm DEFAULT CHARACTER SET utf8;
	grant all on scm.* TO 'cloudera-scm'@'%' IDENTIFIED BY 'cloudera-scm';

	create database amon DEFAULT CHARACTER SET utf8;
	grant all on amon.* TO 'amon'@'%' IDENTIFIED BY 'amon';

	create database rman DEFAULT CHARACTER SET utf8;
	grant all on rman.* TO 'rman'@'%' IDENTIFIED BY 'rman';

	create database nav DEFAULT CHARACTER SET utf8;
	grant all on nav.* TO 'nav'@'%' IDENTIFIED BY 'nav';

	create database metastore DEFAULT CHARACTER SET utf8;
	grant all on metastore.* TO 'hive'@'%' IDENTIFIED BY 'hive';

	create database hue DEFAULT CHARACTER SET utf8;
	grant all on hue.* to 'hue'@'%' IDENTIFIED BY 'hue';

	create database oozie DEFAULT CHARACTER SET utf8;
	grant all on oozie.* to 'oozie'@'%' IDENTIFIED BY 'oozie';

On slave
    
mysql -u root -p
Enter password:

>show databases

Should show all databases on slave.

Databases which were before the replication started have to be manually created on the slave and then updates will be reflected there.











